{{- if not .Values.application.initializeCommand -}}
{{- if .Values.worker.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "trackableappname" . }}-worker
  annotations:
    app.gitlab.com/app: {{ .Values.gitlab.app | quote }}
    {{ if .Values.gitlab.env }}app.gitlab.com/env: {{ .Values.gitlab.env | quote }}{{ end }}
  labels:
    app: {{ include "appname" . }}
    part: 'backend-worker'
    track: "{{ .Values.application.track }}"
    tier: "{{ .Values.application.tier }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    specificappname: {{ .Values.gitlab.app }}
spec:
  replicas: {{ .Values.worker.replicaCount }}
  revisionHistoryLimit: {{ .Values.worker.revisionHistoryLimit | default 10 }}
  selector:
    matchLabels:
      app: {{ include "appname" . }}
      part: 'backend-worker'
      track: "{{ .Values.application.track }}"
      tier: "{{ .Values.application.tier }}"
      release: {{ .Release.Name }}
{{- if .Values.worker.podAntiAffinity -}}
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - {{ include "appname" . }}
            - key: part
              operator: In
              values:
              - 'backend-worker'
            - key: release
              operator: In
              values:
              - {{ .Release.Name }}
            - key: specificappname
              operator: In
              values:
              - {{ .Values.gitlab.app | quote }}
            topologyKey: "kubernetes.io/hostname"
{{- end }}
  template:
    metadata:
      annotations:
        checksum/application-secrets: "{{ .Values.application.secretChecksum }}"
      labels:
        app: {{ template "appname" . }}
        part: 'backend-worker'
        track: "{{ .Values.application.track }}"
        tier: "{{ .Values.application.tier }}"
        release: {{ .Release.Name }}
    spec:
      {{- if .Values.worker.securityContext.enabled }}
      securityContext:
        fsGroup: {{ .Values.worker.securityContext.fsGroup }}
        runAsUser: {{ .Values.worker.securityContext.runAsUser }}
      {{- end }}
      imagePullSecrets:
{{ toYaml .Values.image.secrets | indent 10 }}
      terminationGracePeriodSeconds: {{ .Values.worker.terminationGracePeriodSeconds }}
      containers:
      - name: {{ .Chart.Name }}-worker
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args: ["{{ .Values.worker.args | default "bundle exec sidekiq" }}"]
        {{- if .Values.worker.sidekiq_alive.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.worker.sidekiq_alive.livenessProbe.path }}
            port: {{ .Values.worker.sidekiq_alive.livenessProbe.port }}
          initialDelaySeconds: {{ .Values.worker.sidekiq_alive.livenessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.worker.sidekiq_alive.livenessProbe.timeoutSeconds }}
          periodSeconds: {{ .Values.worker.sidekiq_alive.livenessProbe.periodSeconds }}
        readinessProbe:
          httpGet:
            path: {{ .Values.worker.sidekiq_alive.readinessProbe.path }}
            port: {{ .Values.worker.sidekiq_alive.livenessProbe.port }}
          initialDelaySeconds: {{ .Values.worker.sidekiq_alive.readinessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.worker.sidekiq_alive.readinessProbe.timeoutSeconds }}
        lifecycle:
          preStop:
            exec:
              command: ["bundle", "exec", "sidekiqctl", "quiet", "/tmp/sidekiq.pid", "0"]
        {{- end }}
        {{- if .Values.application.secretName }}
        envFrom:
        - secretRef:
            name: {{ .Values.application.secretName }}
        {{- end }}
        env:
        {{- if .Values.application.database_host }}
        - name: DATABASE_HOST
          value: {{ .Values.application.database_host | quote }}
        {{- end }}
        {{- if .Values.application.database_url }}
        - name: DATABASE_URL
          value: {{ .Values.application.database_url | quote }}
        {{- end }}
        - name: GITLAB_ENVIRONMENT_NAME
          value: {{ .Values.gitlab.envName }}
        - name: GITLAB_ENVIRONMENT_URL
          value: {{ .Values.gitlab.envURL }}
        resources:
{{ toYaml .Values.worker.resources | indent 12 }}
{{- end -}}
{{- end -}}
